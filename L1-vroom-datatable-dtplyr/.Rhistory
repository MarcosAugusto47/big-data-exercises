# 2
## A
library(data.table)
library(geobr)
files = list.files(path='dados/', full.names = TRUE)
files
files[!:2]
files[1:2]
# 2
## A
library(data.table)
library(geobr)
files = list.files(path='dados/', full.names = TRUE)[1:2]
COLS = c('estabelecimento_uf', 'vacina_descricao_dose', 'estabelecimento_municipio_codigo')
janssen_all_list = rbindlist(lapply(files, fread, select = c('estabelecimento_uf', 'vacina_descricao_dose', 'estabelecimento_municipio_codigo')))
files = list.files(path='dados/', full.names = TRUE)
COLS = c('estabelecimento_uf', 'vacina_descricao_dose', 'estabelecimento_municipio_codigo')
covid_subset = rbindlist(lapply(files, fread, select = c('estabelecimento_uf', 'vacina_descricao_dose', 'estabelecimento_municipio_codigo')))
View(janssen_all_list)
View(janssen_all_list)
teste = read_health_region()
teste
class(teste)
health_region = read_health_region()
head(health_region)
head(covid_subset)
municipal_code = read.csv("Tabela_codigo.csv")
list.files
list.files()
municipal_code = read.csv("Tabela_codigos.csv")
View(municipal_code)
View(municipal_code)
class(covid_subset)
## B
covid_subset[, id=.I]
## B
covid_subset[, id := .I]
View(covid_subset)
## B
covid_subset[, estabelecimento_municipio_codigo := .I]
View(covid_subset)
library(data.table)
library(geobr)
files = list.files(path='dados/', full.names = TRUE)
COLS = c('estabelecimento_uf', 'vacina_descricao_dose', 'estabelecimento_municipio_codigo')
covid_subset = rbindlist(lapply(files, fread, select = COLS))
health_region = read_health_region()
municipal_code = read.csv("Tabela_codigos.csv")
?merge
head(municipal_code)
head(health_region)
municipal_code
class(municipal_code)
municipal_code = read.csv("Tabela_codigos.csv")
head(muncipal_code)
head(municipal_code)
municipal_code = read.csv("Tabela_codigos.csv")
colnames(municipal_code) = c('x', 'municipio', 'cod_IBGE', 'cod_regiao_saude', 'nome_regiao_saude')
head(municipal_code)
municipal_code = read.csv("Tabela_codigos.csv")
colnames(municipal_code) = c('x', 'uf', 'municipio', 'cod_IBGE', 'cod_regiao_saude', 'nome_regiao_saude')
head(municipal_code)
teste = merge(covid_subset, municipal_code, by.x = 'estabelecimento_muncipio_codigo', by.y = 'cod_IBGE')
teste = merge(covid_subset, municipal_code, by.x = 'estabelecimento_municipio_codigo', by.y = 'cod_IBGE')
teste = merge(covid_subset, municipal_code,
by.x = 'estabelecimento_municipio_codigo',
by.y = 'cod_IBGE',
all.x = TRUE)
teste = merge(covid_subset, municipal_code,
by.x = 'estabelecimento_municipio_codigo',
by.y = 'cod_IBGE',
all.x = FALSE)
teste = merge(covid_subset, municipal_code,
by.x = 'estabelecimento_municipio_codigo',
by.y = 'cod_IBGE',
all.x = TRUE)
head(teste)
head(covid_subset)
covid_subset = merge(covid_subset, municipal_code,
by.x = 'estabelecimento_municipio_codigo',
by.y = 'cod_IBGE',
all.x = TRUE)
## C
covid_subset[, .(qtd_vacinados = sum(estabelecimento_uf)), by = nome_regiao_saude]
## C
covid_subset[, flag := 1]
View(covid_subset)
library(data.table)
library(geobr)
files = list.files(path='dados/', full.names = TRUE)
COLS = c('estabelecimento_uf', 'vacina_descricao_dose', 'estabelecimento_municipio_codigo')
covid_subset = rbindlist(lapply(files, fread, select = COLS))
health_region = read_health_region()
municipal_code = read.csv("Tabela_codigos.csv")
colnames(municipal_code) = c('x', 'uf', 'municipio', 'cod_IBGE', 'cod_regiao_saude', 'nome_regiao_saude')
## B
covid_subset[, estabelecimento_municipio_codigo := .I]
covid_subset = merge(covid_subset, municipal_code,
by.x = 'estabelecimento_municipio_codigo',
by.y = 'cod_IBGE',
all.x = TRUE)
## C
#covid_subset[, flag := 1]
agg_region_vaccinated = covid_subset[, .N, by = nome_regiao_saude]
agg_region_vaccinated
View(covid_subset)
17903667 + 5571
17903667 - 5571
head(municipal_code)
str(municipal_code)
str(covid_subset)
head(covid_subset)
covid_subset = rbindlist(lapply(files, fread, select = COLS))
head(covid_subset)
head(municipal_code)
teste = merge(covid_subset, municipal_code,
by.x = 'estabelecimento_municipio_codigo',
by.y = 'cod_IBGE',
all.x = TRUE)
head(teste)
## C
#covid_subset[, flag := 1]
agg_region_vaccinated = teste[, .N, by = nome_regiao_saude]
agg_region_vaccinated
covid_subset = merge(covid_subset, municipal_code,
by.x = 'estabelecimento_municipio_codigo',
by.y = 'cod_IBGE',
all.x = TRUE)
head(teste)
head(covid_subset)
## C
#covid_subset[, flag := 1]
agg_region_vaccinated = covid_subset[, .N, by = nome_regiao_saude]
agg_region_vaccinated
median(agg_region_vaccinated$N)
vaccination_median = median(agg_region_vaccinated$N)
teste = agg_region_vaccinated[, classification := ifelse (N <= vaccination_median, "Baixa", "Alta")]
teste
teste
agg_region_vaccinated[order(N), ]
agg_region_vaccinated = agg_region_vaccinated[order(N), ]
agg_region_vaccinated[1:5, ]
agg_region_vaccinated[classification=='baixa', ][1:5, ]
agg_region_vaccinated[classification=='baixa', ]
agg_region_vaccinated
(agg_region_vaccinated[classification == 'baixa', ])[1:5, ]
(agg_region_vaccinated[classification == 'baixa', ])
agg_region_vaccinated[classification == 'baixa', ]
agg_region_vaccinated
class(agg_region_vaccinated)
agg_region_vaccinated[classification == 'baixa']
agg_region_vaccinated[classification == "Baixa"]
agg_region_vaccinated[classification == "Baixa"][1:5, ]
agg_region_vaccinated[classification == "Alta"][1:5, ]
## C
library(dtplyr)
install.packages("dtplyr")
library(data.table)
library(geobr)
files = list.files(path='dados/', full.names = TRUE)
COLS = c('estabelecimento_uf', 'vacina_descricao_dose', 'estabelecimento_municipio_codigo')
covid_subset = rbindlist(lapply(files, fread, select = COLS))
health_region = read_health_region()
municipal_code = read.csv("Tabela_codigos.csv")
colnames(municipal_code) = c('x', 'uf', 'municipio', 'cod_IBGE', 'cod_regiao_saude', 'nome_regiao_saude')
covid_subset_add = merge(covid_subset, municipal_code,
by.x = 'estabelecimento_municipio_codigo',
by.y = 'cod_IBGE',
all.x = TRUE)
agg_region_vaccinated = covid_subset_add[, .N, by = nome_regiao_saude]
vaccination_median = median(agg_region_vaccinated$N)
agg_region_vaccinated = agg_region_vaccinated[, classification := ifelse (N <= vaccination_median, "Baixa", "Alta")]
agg_region_vaccinated = agg_region_vaccinated[order(N), ]
agg_region_vaccinated[classification == "Baixa"][1:5, ]
agg_region_vaccinated[classification == "Alta"][1:5, ]
## C
library(dtplyr)
lazy_covid_subset = lazy_dt(covid_subset)
lazy_covid_subset %>% head()
class(lazy_covid_subset)
lazy_covid_subset %>% slice(1:10)
## C
library(dplyr)
library(dtplyr)
lazy_covid_subset = lazy_dt(covid_subset)
lazy_covid_subset %>% slice(1:10)
teste = lazy_covid_subset %>%
left_join(munocipal_code, by = c("estabelecimento_municipio_codigo" = "cod_IBGE"))
teste = lazy_covid_subset %>%
left_join(municipal_code, by = c("estabelecimento_municipio_codigo" = "cod_IBGE"))
lazy_covid_subset %>%
left_join(municipal_code, by = c("estabelecimento_municipio_codigo" = "cod_IBGE")) %>%
group_by(nome_regiao_saude) %>%
summarise(n())
lazy_covid_subset %>%
left_join(municipal_code, by = c("estabelecimento_municipio_codigo" = "cod_IBGE")) %>%
group_by(nome_regiao_saude) %>%
summarise(n = n()) %>%
mutate(classification = if_else(n <= median(n), "Baixa", "Alta"))
lazy_covid_subset %>%
left_join(municipal_code, by = c("estabelecimento_municipio_codigo" = "cod_IBGE")) %>%
group_by(nome_regiao_saude) %>%
summarise(n = n()) %>%
mutate(classification = if_else(n <= median(n), "Baixa", "Alta")) %>%
arrange(n)
lazy_agg_region_vaccinated = lazy_covid_subset %>%
left_join(municipal_code, by = c("estabelecimento_municipio_codigo" = "cod_IBGE")) %>%
group_by(nome_regiao_saude) %>%
summarise(n = n()) %>%
mutate(classification = if_else(n <= median(n), "Baixa", "Alta")) %>%
arrange(n)
agg_region_vaccinated
lazy_agg_region_vaccinated
lazy_agg_region_vaccinated %>% print(n=25)
print(lazy_agg_region_vaccinated, n=25)
library(dplyr)
library(data.table)
library(geobr)
files = list.files(path='dados/', full.names = TRUE)
COLS = c('estabelecimento_uf', 'vacina_descricao_dose', 'estabelecimento_municipio_codigo')
covid_subset = rbindlist(lapply(files, fread, select = COLS))
health_region = read_health_region() %>% as.data.table()
municipal_code = fread("Tabela_codigos.csv")
colnames(municipal_code) = c('x', 'uf', 'municipio', 'cod_IBGE', 'cod_regiao_saude', 'nome_regiao_saude')
## B
data_table_wrapper = function(){
covid_subset_add = merge(covid_subset, municipal_code,
by.x = 'estabelecimento_municipio_codigo',
by.y = 'cod_IBGE',
all.x = TRUE)
agg_region_vaccinated = covid_subset_add[, .N, by = nome_regiao_saude]
vaccination_median = median(agg_region_vaccinated$N)
agg_region_vaccinated = agg_region_vaccinated[, classification := ifelse (N <= vaccination_median, "Baixa", "Alta")][order(N), ]
agg_region_vaccinated = agg_region_vaccinated[order(N), ]
bottom_low = agg_region_vaccinated[classification == "Baixa"][1:5, ]
bottom_high = agg_region_vaccinated[classification == "Alta"][1:5, ]
return(list(bottom_low, bottom_high))
}
## C
library(dtplyr)
lazy_covid_subset = lazy_dt(covid_subset)
dtplyr_wrapper = function(x, y){
lazy_agg_region_vaccinated = x %>%
left_join(y, by = c("estabelecimento_municipio_codigo" = "cod_IBGE")) %>%
group_by(nome_regiao_saude) %>%
summarise(n = n()) %>%
mutate(classification = if_else(n <= median(n), "Baixa", "Alta")) %>%
arrange(n) %>%
as_tibble()
bottom_low = lazy_agg_region_vaccinated %>% filter(classification=='Baixa') %>% head(n=5)
bottom_high = lazy_agg_region_vaccinated %>% filter(classification=='Alta') %>% head(n=5)
return(list(bottom_low, bottom_high))
}
data_table_wrapper()
dtplyr_wrapper(lazy_covid_subset, municipal_code)
## D
library(microbenchmark)
running_times = microbenchmark(
data_table = data_table_wrapper(),
dtplyr = dtplyr_wrapper(lazy_covid_subset, municipal_code),
#dplyr = dtplyr_wrapper(tbl_covid_subset, tbl_municipal_code),
times = 20)
running_times
dtplyr_wrapper(tbl_covid_subset, tbl_municipal_code)
tbl_covid_subset = covid_subset %>% as_tibble()
tbl_municipal_code = municipal_code %>% as_tibble()
dtplyr_wrapper(tbl_covid_subset, tbl_municipal_code)
## B
data_table_wrapper = function(){
covid_subset_add = merge(covid_subset, municipal_code,
by.x = 'estabelecimento_municipio_codigo',
by.y = 'cod_IBGE',
all.x = TRUE)
agg_region_vaccinated = covid_subset_add[, .N, by = nome_regiao_saude]
vaccination_median = median(agg_region_vaccinated$N)
agg_region_vaccinated = agg_region_vaccinated[, classification := ifelse (N <= vaccination_median, "Baixa", "Alta")][order(N), ]
agg_region_vaccinated = agg_region_vaccinated[order(N)]
bottom_low = agg_region_vaccinated[classification == "Baixa"][1:5, ]
bottom_high = agg_region_vaccinated[classification == "Alta"][1:5, ]
return(list(bottom_low, bottom_high))
}
## B
data_table_wrapper = function(){
covid_subset_add = merge(covid_subset, municipal_code,
by.x = 'estabelecimento_municipio_codigo',
by.y = 'cod_IBGE',
all.x = TRUE)
agg_region_vaccinated = covid_subset_add[, .N, by = nome_regiao_saude]
vaccination_median = median(agg_region_vaccinated$N)
agg_region_vaccinated = agg_region_vaccinated[, classification := ifelse (N <= vaccination_median, "Baixa", "Alta")][order(N), ]
agg_region_vaccinated = agg_region_vaccinated[order(N)]
bottom_low = agg_region_vaccinated[classification == "Baixa"][1:5, ]
bottom_high = agg_region_vaccinated[classification == "Alta"][1:5, ]
return(list(bottom_low, bottom_high))
}
data_table_wrapper()
## B
data_table_wrapper = function(){
covid_subset_add = merge(covid_subset, municipal_code,
by.x = 'estabelecimento_municipio_codigo',
by.y = 'cod_IBGE',
all.x = TRUE)
agg_region_vaccinated = covid_subset_add[, .N, by = nome_regiao_saude]
vaccination_median = median(agg_region_vaccinated$N)
agg_region_vaccinated = agg_region_vaccinated[, classification := ifelse (N <= vaccination_median, "Baixa", "Alta")]
agg_region_vaccinated = agg_region_vaccinated[order(N)]
bottom_low = agg_region_vaccinated[classification == "Baixa"][1:5, ]
bottom_high = agg_region_vaccinated[classification == "Alta"][1:5, ]
return(list(bottom_low, bottom_high))
}
data_table_wrapper()
## B
data_table_wrapper = function(){
covid_subset_add = merge(covid_subset, municipal_code,
by.x = 'estabelecimento_municipio_codigo',
by.y = 'cod_IBGE',
all.x = TRUE)
agg_region_vaccinated = covid_subset_add[, .N, by = nome_regiao_saude]
vaccination_median = median(agg_region_vaccinated$N)
agg_region_vaccinated = agg_region_vaccinated[, classification := ifelse (N <= vaccination_median, "Baixa", "Alta")]
agg_region_vaccinated = agg_region_vaccinated[order(N)]
bottom_low = agg_region_vaccinated[classification == "Baixa"][1:5, ]
bottom_high = agg_region_vaccinated[classification == "Alta"][1:5, ]
return(list(bottom_low, bottom_high))
}
data_table_wrapper()
## C
library(dtplyr)
lazy_covid_subset = lazy_dt(covid_subset)
dtplyr_wrapper = function(x, y){
lazy_agg_region_vaccinated = x %>%
left_join(y, by = c("estabelecimento_municipio_codigo" = "cod_IBGE")) %>%
group_by(nome_regiao_saude) %>%
summarise(n = n()) %>%
mutate(classification = if_else(n <= median(n), "Baixa", "Alta")) %>%
arrange(n) %>%
as_tibble()
bottom_low = lazy_agg_region_vaccinated %>% filter(classification=='Baixa') %>% head(n=5)
bottom_high = lazy_agg_region_vaccinated %>% filter(classification=='Alta') %>% head(n=5)
return(list(bottom_low, bottom_high))
}
dtplyr_wrapper(lazy_covid_subset, municipal_code)
## D
library(microbenchmark)
tbl_covid_subset = covid_subset %>% as_tibble()
tbl_municipal_code = municipal_code %>% as_tibble()
running_times = microbenchmark(
data_table = data_table_wrapper(),
dtplyr = dtplyr_wrapper(lazy_covid_subset, municipal_code),
dplyr = dtplyr_wrapper(tbl_covid_subset, tbl_municipal_code),
times = 2)
running_times
## B
p_load(vroom)
ac1 = vroom(file = "dados/AC1.csv",
locale = locale("br", encoding = "latin1"),
num_threads = 3)
library(pacman)
## B
p_load(vroom)
ac1 = vroom(file = "dados/AC1.csv",
locale = locale("br", encoding = "latin1"),
num_threads = 3)
ac1 %>% class
class(ac1)
dim(ac1)
View(ac1)
## B
p_load(vroom)
ac1 = vroom(file = "dados/AC1.csv",
locale = locale("br", encoding = "UTF-8"),
num_threads = 3)
View(ac1)
COLS = c('paciente_idade', 'paciente_enumSexoBiologico','paciente_racaCor_valor', 'vacina_grupo_Atendimento_nome', 'vacina_categoria_nome', 'vacina_dataAplicacao')
cien
COLS = c('paciente_idade', 'paciente_enumSexoBiologico','paciente_racaCor_valor', 'vacina_grupo_Atendimento_nome', 'vacina_categoria_nome', 'vacina_dataAplicacao')
COLS
ac1[, COLS]
COLS = c('paciente_idade', 'paciente_enumSexoBiologico','paciente_racaCor_valor', 'vacina_grupoAtendimento_nome', 'vacina_categoria_nome', 'vacina_dataAplicacao')
ac1[, COLS]
COLS = c('paciente_idade', 'paciente_enumSexoBiologico','paciente_racaCor_valor', 'vacina_grupoAtendimento_nome', 'vacina_nome', 'vacina_dataAplicacao')
summary(ac1[, COLS])
ac1 = vroom(file = "dados/AC1.csv",
locale = locale("br", encoding = "UTF-8"),
num_threads = 3) %>%
mutate_at(vars(matches('paciente|vacina')), as.factor)
COLS = c('paciente_idade', 'paciente_enumSexoBiologico','paciente_racaCor_valor', 'vacina_grupoAtendimento_nome', 'vacina_nome', 'vacina_dataAplicacao')
summary(ac1[, COLS])
## B
p_load(vroom)
ac1 = vroom(file = "dados/AC1.csv",
locale = locale("br", encoding = "UTF-8"),
num_threads = 3) %>%
mutate_at(vars(contains('paciente|vacina')), as.factor)
COLS = c('paciente_idade', 'paciente_enumSexoBiologico','paciente_racaCor_valor', 'vacina_grupoAtendimento_nome', 'vacina_nome', 'vacina_dataAplicacao')
summary(ac1[, COLS])
?contains
## B
p_load(vroom)
ac1 = vroom(file = "dados/AC1.csv",
locale = locale("br", encoding = "UTF-8"),
num_threads = 3) %>%
mutate_at(vars(matches('paciente|vacina')), as.factor)
COLS = c('paciente_idade', 'paciente_enumSexoBiologico','paciente_racaCor_valor', 'vacina_grupoAtendimento_nome', 'vacina_nome', 'vacina_dataAplicacao')
summary(ac1[, COLS])
## C
files = do.call(paste0, expand.grid('dados/', list.files('dados/')[-8]))
files
(dados_folder_size = sum(sapply(files, file.size)))
(ac1_memory_R = object.size(ac1))
## D
janssen = vroom(file = pipe("findstr JANSSEN dados\\AC1.csv"),
delim = ";",
locale = locale("br", encoding = "UTF-8"))
## D
janssen = vroom(file = pipe("findstr JANSSEN dados\\AC1.csv"),
delim = ";",
locale = locale("br", encoding = "UTF-8"))
class(janssen)
dim(janssen)
janssen_memory_R = object.size(janssen)
(ac1_memory_R - janssen_memory_R)
janssen_memory_R = object.size(janssen)
(ac1_memory_R - janssen_memory_R)
## E
janssen_all = vroom(file = pipe("findstr JANSSEN dados\\*.csv"),
delim = ";",
locale = locale("br", encoding = "UTF-8"))
# 2
## A
library(data.table)
library(geobr)
files = list.files(path='dados/', full.names = TRUE)
COLS = c('estabelecimento_uf', 'vacina_descricao_dose', 'estabelecimento_municipio_codigo')
covid_subset = rbindlist(lapply(files, fread, select = COLS))
health_region = read_health_region() %>% as.data.table()
municipal_code = fread("Tabela_codigos.csv")
colnames(municipal_code) = c('x', 'uf', 'municipio', 'cod_IBGE', 'cod_regiao_saude', 'nome_regiao_saude')
## B
data_table_wrapper = function(){
covid_subset_add = merge(covid_subset, municipal_code,
by.x = 'estabelecimento_municipio_codigo',
by.y = 'cod_IBGE',
all.x = TRUE)
agg_region_vaccinated = covid_subset_add[, .N, by = nome_regiao_saude]
vaccination_median = median(agg_region_vaccinated$N)
agg_region_vaccinated = agg_region_vaccinated[, classification := ifelse (N <= vaccination_median, "Baixa", "Alta")]
agg_region_vaccinated = agg_region_vaccinated[order(N)]
bottom_low = agg_region_vaccinated[classification == "Baixa"][1:5, ]
bottom_high = agg_region_vaccinated[classification == "Alta"][1:5, ]
return(list(bottom_low, bottom_high))
}
data_table_wrapper()
## C
library(dtplyr)
lazy_covid_subset = lazy_dt(covid_subset)
dtplyr_wrapper = function(x, y){
lazy_agg_region_vaccinated = x %>%
left_join(y, by = c("estabelecimento_municipio_codigo" = "cod_IBGE")) %>%
group_by(nome_regiao_saude) %>%
summarise(n = n()) %>%
mutate(classification = if_else(n <= median(n), "Baixa", "Alta")) %>%
arrange(n) %>%
as_tibble()
bottom_low = lazy_agg_region_vaccinated %>% filter(classification=='Baixa') %>% head(n=5)
bottom_high = lazy_agg_region_vaccinated %>% filter(classification=='Alta') %>% head(n=5)
return(list(bottom_low, bottom_high))
}
dtplyr_wrapper(lazy_covid_subset, municipal_code)
